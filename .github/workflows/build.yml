name: Pyinstaller Build
run-name: ${{ github.actor }} is building python code.
on:
  push:
    branches:
      - main

jobs:

  stage:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'TRG_B')
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip' # caching pip dependencies
        
    - run: pip install -r staged/stager_requirements.txt
    - run: python staged/stager.py

    - uses: actions/upload-artifact@master
      with:
        name: fused
        path: staged/fused/*

  linux:
    needs: stage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@master
      with:
        name: fused
        path: staged/fused

    - uses: sayyid5416/pyinstaller@v1
      with:
        python_ver: '3.12'
        pyinstaller_ver: '==6.10.0'
        spec: 'staged/fused/__init__.py'
        requirements: 'src/requirements.txt'
        clean_checkout: false
        exe_path: "./builds"
        options: --onefile, --name "ExampleApp"

    - uses: actions/upload-artifact@master
      with:
        name: linux_x86_64
        path: builds/*

  windows:
    needs: stage
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@master
      with:
        name: fused
        path: staged/fused

    - uses: sayyid5416/pyinstaller@v1
      with:
        python_ver: '3.12'
        pyinstaller_ver: '==6.10.0'
        spec: 'staged/fused/__init__.py'
        requirements: 'src/requirements.txt'
        clean_checkout: false
        exe_path: "./builds"
        options: --onefile, --name "ExampleApp"

    - uses: actions/upload-artifact@master
      with:
        name: windows_x86_64
        path: builds/*

  macos:
    needs: stage
    strategy:
      matrix:
        os-version: ['12', '14']
        include:
          - os-version: '12'
            arch: x86_64
          - os-version: '14'
            arch: aarch64
    runs-on: macos-${{ matrix.os-version }}
    env:
      # even though we run on 12, target towards compatibility
      MACOSX_DEPLOYMENT_TARGET: '11.0'
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@master
      with:
        name: fused
        path: staged/fused
        
    - uses: sayyid5416/pyinstaller@v1
      with:
        python_ver: '3.12'
        pyinstaller_ver: '==6.10.0'
        spec: 'staged/fused/__init__.py'
        requirements: 'src/requirements.txt'
        clean_checkout: false
        exe_path: "./builds"
        options: --onefile, --name "ExampleApp"

    - uses: actions/upload-artifact@master
      with:
        name: macos_${{ matrix.arch }}
        path: builds/*

  web:
    needs: stage
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'TRG_W')
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@master
      with:
        name: fused
        path: staged/fused

    - name: Ensure builds and builds/web directories exist
      run: |
        mkdir -p ./builds/web

    - name: Read content and replace placeholder in index.html
      run: |
        # Read the content into vars
        content=$(<staged/fused/__init__.py)
        requirements=$(<src/requirements.txt)

        # Create temporary files
        echo "$content" > temp_content.txt
        # Read the requirements.txt and split by newlines, formatting as JSON
        json_array=$(echo "$requirements" | sed 's/^/"/;s/$/"/;s/\n/","/g')
        json_output="{\"packages\":[$json_array]}"
        echo "$json_output" > temp_requirements.txt

        # Replace the placeholders in the HTML file using the temporary file
        sed -e "/<!--SOURCEHERE-->/r temp_content.txt" -e "//d" \
              -e "/<!--REQUIREMENTSHERE-->/r temp_requirements.txt" -e "//d" \
              src/targets/web/index.html > ./builds/__init__.html

        # Clean up temporary file
        rm temp_content.txt temp_requirements.txt

    - uses: actions/upload-artifact@master
      with:
        name: web_pyscript_pydiode
        path: builds/*