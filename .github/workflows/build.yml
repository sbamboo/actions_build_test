name: Pyinstaller Build Test
run-name: ${{ github.actor }} is building python code.
on: 
  push:
  workflow_dispatch:

jobs:

  stage:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'TRG_B')
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip' # caching pip dependencies
        
    - run: pip install -r staged/stager_requirements.txt
    - run: python staged/stager.py

    - uses: actions/upload-artifact@master
      with:
        name: fused
        path: staged/fused/*

  linux:
    needs: stage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@master
      with:
        name: fused
        path: staged/fused

    - uses: sayyid5416/pyinstaller@v1
      with:
        python_ver: '3.12'
        pyinstaller_ver: '==6.10.0'
        spec: 'staged/fused/__init__.py'
        requirements: 'src/requirements.txt'
        clean_checkout: false
        exe_path: "./builds"
        options: --onefile, --name "ExampleApp"

    - uses: actions/upload-artifact@master
      with:
        name: linux_x86_64
        path: builds/*

  windows:
    needs: stage
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@master
      with:
        name: fused
        path: staged/fused

    - uses: sayyid5416/pyinstaller@v1
      with:
        python_ver: '3.12'
        pyinstaller_ver: '==6.10.0'
        spec: 'staged/fused/__init__.py'
        requirements: 'src/requirements.txt'
        clean_checkout: false
        exe_path: "./builds"
        options: --onefile, --name "ExampleApp"

    - uses: actions/upload-artifact@master
      with:
        name: windows_x86_64
        path: builds/*

  macos:
    needs: stage
    strategy:
      matrix:
        os-version: ['12', '14']
        include:
          - os-version: '12'
            arch: x86_64
          - os-version: '14'
            arch: aarch64
    runs-on: macos-${{ matrix.os-version }}
    env:
      # even though we run on 12, target towards compatibility
      MACOSX_DEPLOYMENT_TARGET: '11.0'
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@master
      with:
        name: fused
        path: staged/fused
        
    - uses: sayyid5416/pyinstaller@v1
      with:
        python_ver: '3.12'
        pyinstaller_ver: '==6.10.0'
        spec: 'staged/fused/__init__.py'
        requirements: 'src/requirements.txt'
        clean_checkout: false
        exe_path: "./builds"
        options: --onefile, --name "ExampleApp"

    - uses: actions/upload-artifact@master
      with:
        name: macos_${{ matrix.arch }}
        path: builds/*

  release:
    needs: [linux,windows,macos]
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'TRG_R')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: ./builds/
      
      - name: Tree Builds-Folder (pre)
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          path: ./builds/
      
      - name: Move correct files (script)
        run: mkdir -p ./builds/dist && mkdir -p ./builds/dist/pysource && for d in ./builds/*/; do f=$(find "$d" -maxdepth 1 -type f \( -name "*.exe" -o ! -name "*.*" -o -name "*.py" \) | head -n 1); if [ -n "$f" ]; then filename=$(basename "$f"); folder=$(basename "$d"); if [[ "$filename" == *.py ]]; then cp "$f" "./builds/dist/pysource/${folder}.py"; elif [[ "$filename" == *.exe ]]; then cp "$f" "./builds/dist/${filename%.*}_${folder}.exe"; else cp "$f" "./builds/dist/${filename}_${folder}"; fi; fi; done
      
      - name: Copy requirements.txt (script)
        run: cp src/requirements.txt ./builds/dist/pysource/requirements.txt

      - name: Compress pysource (script)
        run: zip -j ./builds/dist/pysource.zip ./builds/dist/pysource/*

      - name: Remove pysource-dir (script)
        run: if [ -d "./builds/dist/pysource" ]; then rm -rf "./builds/dist/pysource"; fi

      - name: Tree Builds-Folder (post)
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          path: ./builds/

      - uses: softprops/action-gh-release@v2
        with:
          files: |
            ./builds/dist/*

      